'''

10개의 정수를 입력받아, 부분집합의 합이 0이 되면 True

- 원소 n개의 모든 부분집합의 수
- 2**N은 1<<N과 같다.
- 예) 2 ** 3 == 8
1 << 3
0001을 왼쪽으로 세번 밀면 1000 : 2진수 8과 같다.

'''

import sys
sys.stdin = open('input.txt')

T = int(input())

for tc in range(1, T+1):
    arr = list(map(int, input().split()))
    N = len(arr)

    # 2진수 리스트에서 1을 왼쪽으로 밀면서 확인
    # N은 4 = 1<<4 -> 2^0부터 2^3까지 네 칸으로 구성된 2진수 리스트
    # 0000 -> 0001 -> 0010 -> ... -> 1111 : 1부터 15까지의 이진수
    # 이 리스트에서 2진수의 의미는 빼고, 위치만 생각하자
    # N = 4인 리스트 [4, 3, 5, 7]가 있다.
    # 그럼  1<<4로 우선 부분집합을 만든다.
    # 0000 -> 0001 -> 0010 -> ... -> 1111
    # : 0000은 공집합, 0001은 7만 있는 집합, 1111은 4, 3, 5, 7이 있는 집합을 뜻한다.
    for i in range(1, 1<<N):
        for j in range(N):
            if i & (1<<j):
                print(arr[j], end=', ')
        print()
    print()
    # 그 다음 만들어진 부분집합에 특정 값이 있는지 확인해보자.
    # [4, 3, 5, 7]의 부분집합들 중에 3이 있는 부분집합을 찾아보자.
    # 3을 뜻하는 0100 : 3은 2진수 리스트에서 1을 왼쪽으로 2번 민 값이다. = 1<<2
    # 모든 부분집합 중, 1번 인덱스가 1이면 해당 부분집합에는 3이 있는 것이다.